#!/bin/bash

function _vcode_write_history() {
  local tmp="${HISTFILE}.$$.$RANDOM.tmp"
  for d in "${(@k)prio}"; do
    printf '%s|%s\n' "${prio[$d]}" "$d"
  done | sort -t'|' -nr | head -n "$MAX_ENTRIES" > "$tmp"
  mv "$tmp" "$HISTFILE"
}


CODE_CLI="$(whence -p code)"
[[ -x "$CODE_CLI" ]] || {
  echo "VSCode CLI not found in PATH." >&2
  exit 1
}

HISTFILE="${HOME}/.code_history"
MAX_ENTRIES=100
typeset -A prio

mkdir -p "${HISTFILE%/*}"
touch "$HISTFILE"

# Load history
while IFS='|' read -r cnt path; do
  prio["$path"]=$cnt
done 2>/dev/null < "$HISTFILE"

# --recent flag
if [[ "$1" == "--recent" ]]; then
  for d in "${(@k)prio}"; do
    printf '%s|%s\n' "${prio[$d]}" "$d"
  done | sort -t'|' -nr | head -n "$MAX_ENTRIES"
  exit 0
fi

# No-arg mode: fzf
if (( $# == 0 )); then
  if (( ${#prio[@]} == 0 )); then
    echo "ðŸ›ˆ No project history yet â€“ open one first with 'vcode <path>'" >&2
    exit 1
  fi

  local sel
  sel="$(for d in "${(@k)prio}"; do
           printf '%s|%s\n' "${prio[$d]}" "$d"
         done | sort -t'|' -nr | cut -d'|' -f2- \
         | fzf --reverse --prompt='VSCode Projects> ')"
  [[ -n $sel ]] || exit 1
  prio["$sel"]=$(( ${prio[$sel]} + 1 ))
  _vcode_write_history
  exec "$CODE_CLI" "$sel"
fi

# With arguments
for arg in "$@"; do
  if [[ -d $arg ]]; then
    abs=$(cd "$arg" && pwd -P)
  elif [[ -e $arg ]]; then
    abs=$(cd "$(dirname "$arg")" && pwd -P)
  else
    continue
  fi
  prio["$abs"]=$(( ${prio[$abs]:-0} + 1 ))
done

_vcode_write_history
exec "$CODE_CLI" "$@"
